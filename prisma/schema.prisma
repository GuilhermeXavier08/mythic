// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// --- NOVO: Define as funções de usuário ---
enum Role {
  USER
  ADMIN
}

// --- NOVO: Define os status de um jogo ---
enum GameStatus {
  PENDING   // Pendente de aprovação
  APPROVED  // Aprovado e visível na loja
  REJECTED  // Rejeitado pelo admin
}

model User {
  id        String     @id @default(cuid())
  email     String     @unique
  name      String?
  username  String     @unique
  friendCode Int       @unique
  password  String
  createdAt DateTime   @default(now())
  
  role      Role       @default(USER) // <-- ADICIONADO (Todo novo usuário é USER)
  
  purchases Purchase[]
  submittedGames Game[] // <-- ADICIONADO (Lista de jogos que este usuário enviou)
}

model Game {
  id          String     @id @default(cuid())
  title       String
  description String
  price       Float
  imageUrl    String
  
  gameUrl     String     @default("") // <-- LinHA CORRIGIDA
  
  status      GameStatus @default(PENDING)
  
  developerId String
  developer   User     @relation(fields: [developerId], references: [id])

  purchases   Purchase[]
  
  @@unique([developerId, title])
}

model Purchase {
  id          String   @id @default(cuid())
  userId      String
  gameId      String
  purchasedAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
  game Game @relation(fields: [gameId], references: [id])

  @@unique([userId, gameId])
}